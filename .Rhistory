#' @import ggrepel
#' @import tibble
#' @export
#' @keywords Analysis and visualization
short_term_change <- function(ps,
rarefy = TRUE,
depth = min(sample_sums(ps)),
plot.type = NULL,
abbreviation = T) {
message("Calculating short term growth behaviours of taxa")
ps.1 <- otu.tb <- grs.all <- grts <- otu.rar <- maxgrs <- p <- NULL
if (rarefy == TRUE) {
ps.1 <- rarefy_even_depth(ps, sample.size = depth)
} else {
ps.1 <- microbiome::transform(ps, "compositional")
}
otu.tb <- (taxa_time_table(ps.1, normalize = F, time.col = "Time_hr", remove.zero = F) + .1)
otu.tb$time <- rownames(otu.tb)
otu.tb.ldf <- reshape2::melt(otu.tb)
# head(otu.tb)
otu.tb.ldf$time <- as.numeric(otu.tb.ldf$time)
# otu.tb.ldf$value <- (otu.tb.ldf$value+0.1)
# str(otu.tb.ldf)
grwt <- as_tibble(otu.tb.ldf) %>%
arrange(time) %>%
group_by(variable) %>%
mutate(
time_lag = time - lag(time), # time lag since sampling is not always equal
growth_diff = log(value / lag(value)),
# growth_diff = log(value - lag(value)/lag(value)), # log(present abund-past abund/past abund)
# growth = log(value - lag(value)/Diff_timepoint)+.1,
growth_rate = log(value - lag(value)/lag(value)),
var_abund = value - lag(value)/time_lag,
# Mortality = log(lead(value) - value/Diff_timepoint)+.1
)
grwt$sample.name <- grwt$time
# colnames(grwt)["variable"]
colnames(grwt)[colnames(grwt) == "variable"] <- "OTU"
# grs.all <- grwt %>%
# gather(-"sample.name", key = "OTU", value = "growth_rate") %>%
# mutate(Time = sample.name) %>%
#  group_by(OTU, time) %>%
# replace_na(growth_diff, "NaN") %>%
# summarize(
#  mean.growth = mean(growth_diff),
#  sd.growth = sd(growth_diff)
# )
# head(grs.all)
maxgrs <- grwt %>%
summarize(max.growth = max(growth_diff, na.rm = T))
colnames(maxgrs)[colnames(maxgrs) == "variable"] <- "OTU"
grs.all <- grwt %>%
left_join(maxgrs)
grs.all <- grs.all %>%
mutate(ismax = ifelse(growth_diff == max.growth, T, F))
# DT::datatable(grs.all)
grs.all$OTU <- gsub("_", " ", grs.all$OTU)
if (abbreviation) {
grs.all$OTUabb <- toupper(abbreviate(grs.all$OTU,
minlength = 3,
method = "both.sides"
))
grs.all$otu.time <- paste0(grs.all$OTUabb, " ", grs.all$time, "h")
} else {
grs.all$otu.time <- paste0(grs.all$OTU, " ", grs.all$time, "h")
}
# head(persistent.grs.all)
# grs.all$Time <- as.numeric(grs.all$time)
if (is.null(plot.type) == TRUE) {
return(grs.all)
} else if (plot.type == "line") {
p <- ggplot(grs.all, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = growth_diff), alpha = 0.6, size = 1) +
geom_point(
data = subset(grs.all, ismax == T),
aes(y = max.growth), alpha = 0.8, size = 3
) +
# coord_flip() +
geom_ribbon(aes(group = NULL, col = NULL, ymax = 0, ymin = min(grs.all$growth_diff)),
fill = "#edf3f5", col = "#edf3f5", alpha = 0.5
) +
theme(
legend.position = "top", legend.text = element_text(size = 9),
panel.background = element_rect(fill = "white", color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key = element_blank()
) +
geom_text_repel(
data = subset(grs.all, ismax == T),
aes(y = max.growth, label = otu.time),
nudge_y = 0.2, box.padding = .5, max.iter = 10000,
size = 3, color = "black", segment.alpha = .5,
fontface = "italic", direction = "both"
) +
geom_hline(yintercept = 0) +
labs(
x = "Time (hr)",
y = expression(paste("Change in abundance ", " µ= ", abund[t + 1] / abund[t]))
)
#+ scale_color_manual(values = strain.colors)
#  y = expression(Mean~growth~rate~(hr^-1))
# p <- p +scale_x_continuous(expand = c(0, 0))
return(p + scale_x_continuous(expand = c(0, 0)))
} else if (plot.type == "polar") {
p <- ggplot(grs.all, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = growth_diff), alpha = 0.6, size = 1) +
geom_point(
data = subset(grs.all, ismax == T),
aes(y = max.growth), alpha = 0.8, size = 3
) +
geom_ribbon(aes(group = NULL, col = NULL, ymax = 0, ymin = -9),
fill = "#edf3f5", col = "#edf3f5", alpha = 0.5
) +
coord_polar(theta = "x") +
theme(
legend.position = "right", legend.text = element_text(size = 9),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(
size = 0.5, linetype = "solid",
colour = "#CCD1D1"
),
panel.grid.minor = element_line(
size = 0.5, linetype = "solid",
colour = "#CCD1D1"
),
legend.key = element_blank()
) +
geom_text_repel(
data = subset(grs.all, ismax == T),
aes(y = max.growth, label = otu.time),
nudge_y = 0.2, box.padding = .5, max.iter = 10000,
size = 3, color = "black", segment.alpha = .5,
fontface = "italic", direction = "both"
) +
geom_hline(yintercept = 0) +
labs(
x = "Time (hr)",
y = expression(paste("Change in abundance ", " µ= ", abund[t + 1] / abund[t]))
)
#+ scale_color_manual(values = strain.colors)
#  y = expression(Mean~growth~rate~(hr^-1))
# p <- p +scale_x_continuous(expand = c(0, 0))
return(p + scale_x_continuous(expand = c(0, 0)))
}
}
p <- ggplot(p.g$data, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = growth_rate), alpha = 0.6, size = 1) + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies"))
p + theme_syncom()
p.bioA <- short_term_change(bioA.lg, rarefy = TRUE, depth=min(sample_sums(bioA.lg)),plot.type = "polar")
p.g <- p.bioA + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies")) + ggtitle("Bioreactor A")
print(p.g)
p <- ggplot(p.g$data, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = growth_rate), alpha = 0.6, size = 1) + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies"))
p + theme_syncom()
p.bioA <- short_term_change(bioA.lg, rarefy = TRUE, depth=min(sample_sums(bioA.lg)),plot.type = "polar")
p.g <- p.bioA + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies")) + ggtitle("Bioreactor A")
print(p.g)
p.g$data
p <- ggplot(p.g$data, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = var_abund), alpha = 0.6, size = 1) + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies"))
p + theme_syncom()
p <- ggplot(p.g$data, aes(x = time, group = OTU, col = OTU)) +
geom_line(aes(y = growth_rate), alpha = 0.6, size = 1) + scale_color_manual("Taxon",values = syncom_colors2("BacterialSpecies"))
p + theme_syncom()
library(syncomR)
library(syncomR)
install.packages("pkgdown")
install.packages("pkgdown")
roxygen2::roxygenize() #Documen
## Loding and installing
# https://kbroman.org/pkg_primer/pages/vignettes.html
# https://github.com/ShadeLab/microbiome_trait_succession/blob/master/succession_analysis.R
# https://github.com/fcentler/EcologicalStabilityPropertiesComputation/blob/master/StabilityComputationV1.0.R
# https://github.com/microbiome/microbiome/blob/master/DESCRIPTION
roxygen2::roxygenize() #Documentation
#Documentation
## Loding and installing
# https://kbroman.org/pkg_primer/pages/vignettes.html
# https://github.com/ShadeLab/microbiome_trait_succession/blob/master/succession_analysis.R
# https://github.com/fcentler/EcologicalStabilityPropertiesComputation/blob/master/StabilityComputationV1.0.R
# https://github.com/microbiome/microbiome/blob/master/DESCRIPTION
roxygen2::roxygenize() #Documentation
devtools::document() #
roxygen2::roxygenize() #Documentation
devtools::document() #
library(syncomR)
library(syncomR)
library(readr)
library(tidyr)
library(magrittr)
#library(edgeR)
library(RColorBrewer)
library(DT)
library(knitr)
library(patchwork)
fasting_cols <- c("#C71585", "#008080")
fer_cols <- c(Bioreactor_5= "#b2182b", Bioreactor_6="#2166ac", Bioreactor_8 = "#35978f")
data(SyncomFiltData)
fasting_cols <- c("#b3de69", "#fb8072", "#80b1d3")
pl <- taxa_coverage(SyncomFiltData,
coverage = 0.95,
time.column = "Time_hr_num",
shape.variable = "Acetate_Feed",
color.variable = "Fasting",
color.pal = fasting_cols,
y.breaks = seq(0, 16, 1),
y.limits = c(3, 13)
)
pl <- pl + facet_wrap(~StudyIdentifier) + theme_syncom()
pl
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p)
print(p + theme_syncom())
library(syncomR)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
bioa_ps <- subset_samples(SyncomFiltData.rel, StudyIdentifier=="Bioreactor A")
fasting_ps <- add_time_lag(bioa_ps)
fasting_ps <- subset_samples(fasting_ps, time_lag >= 12)
p <- plot_syncom_composition(fasting_ps,
type = "bar",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
#facet.var = "StudyIdentifier",
numeric.x.axis = F)
print(p + theme_syncom())
ps1.sycom.rel <- microbiome::transform(SyncomFiltData, "compositional")
fer_cols <- c(`Bioreactor A`= "#b2182b", `Bioreactor B`="#2166ac", `Bioreactor C` = "#35978f")
tax.trac <- plot_trajectory(ps1.sycom.rel,
time.col = "Time_hr",
taxa.level = "Species",
type = "single",
taxa = "Akkermansia_muciniphila",
group.variable = "StudyIdentifier",
color.pal = fer_cols,
transform.counts = "compositional")
tax.trac <- tax.trac + geom_smooth() + theme_syncom()
## a line to specific timepoint of interest
tax.trac + geom_vline(xintercept = 152, size=3, alpha=0.6, color="#e41a1c")
library(patchwork)
# Succession
data(SyncomFiltData)
ps.b5 <- subset_samples(SyncomFiltData, StudyIdentifier== "Bioreactor A")
p.start <- temporal_turnover(ps.b5, tree =NULL,
time.col = 'Time_hr_num',
method = "canberra",
compositional = TRUE,
compared.to = "start") + theme_syncom()
#p.start
p.subseq <- temporal_turnover(ps.b5, tree =NULL,
time.col = 'Time_hr_num',
method = "canberra",
compositional = TRUE,
compared.to = "subsequent")+ theme_syncom()
#p.subseq
p.final <- temporal_turnover(ps.b5, tree =NULL,
time.col = 'Time_hr_num',
method = "canberra",
compositional = TRUE,
compared.to = "final") + theme_syncom()
#p.final
p.start / p.subseq / p.final
data(SyncomFiltData)
p <- temporal_diversity(SyncomFiltData,
time.col = 'Time_hr_num',
div.measure = "gini")
p <- p + facet_wrap(~StudyIdentifier, ncol=1) + geom_smooth(fill = "#a6bddb", color = "#d94801")
p + theme_syncom()
set.seed(4551350)
data(SyncomFiltData)
bioA <- subset_samples(SyncomFiltData, StudyIdentifier== "Bioreactor A")
bioA.lg <- add_time_lag(bioA)
#select_cycles <- c("4","16")
bioA.lg <- subset_samples(bioA.lg, time_lag >= 4)
p.bioA <- plot_growth_rate(bioA.lg, rarefy = TRUE, depth=min(sample_sums(bioA.lg)))
p.bioA <- p.bioA +
theme_syncom() +
scale_color_manual("Taxa",values=syncom_colors2("BacterialSpecies")) + ggtitle("Bioreactor A") +
geom_vline(xintercept = 4, size=3, alpha=0.6, color="grey70") +
geom_hline(aes(yintercept = 0),linetype="dashed", alpha=0.6)
p.bioA + coord_polar()
p.bioA + coord_polar()
p.bioA + facet_wrap(~OTU) + theme_syncom(base_size = 8)
p.bioA + facet_wrap(~OTU) + theme_syncom(base_size = 8)
p.bioA$data
plot(p.bioA$data$mean.growth, p.bioA$data$mean.growth)
cr.df <- p.bioA$data %>%
select(OTU, Time, mean.growth) %>%
group_by(OTU, Time) %>%
tidyr::pivot_wider(id_cols = Time, names_from = OTU, values_from = mean.growth) %>%
arrange(Time)
cr.df <- as.data.frame(cr.df)
rownames(cr.df) <- cr.df $Time
cr.df <- cr.df[,-1]
dim(cr.df)
cor.tab <- associate(cr.df, cr.df,method = "spearman", mode = "table", p.adj.threshold = 0.05, n.signif = 1)
p <- heat(cor.tab, "X1", "X2", fill = "Correlation",
star = "p.adj", p.adj.threshold = 0.05,
star.size = 4)
p
p + theme_syncom()
p #+ theme_syncom()
data(SyncomFiltData)
ps1.b5 <- subset_samples(SyncomFiltData, StudyIdentifier== "Bioreactor A")
ps1.sub <- subset_samples(ps1.b5, Time_hr_num >= 12)
dat.stab <- stability_properties(ps1.sub, time.col = "Time_hr")# B. hydrogenotrophic introduced
knitr::kable(head(dat.stab))
p_ba <- plot_nmds_stability(dat.stab)
# the nmds message is printed on purpose for user to check if Solution reached
p_ba$plot + theme_syncom() + xlab("NMDS1") + ylab("NMDS2")
data(SyncomFiltData)
ps1.b5 <- subset_samples(SyncomFiltData, StudyIdentifier== "Bioreactor B")
dat.stab <- stability_properties(ps1.b5, time.col = "Time_hr",
experimentStart = 24, # first spiked sample after initiation of continous feed operation
tref=168)
plot_resistance(dat.stab) + geom_rect(aes(group = NULL,   col = NULL, ymax = -0.1, ymin = -0.2, xmin=120, xmax=470),
fill = "#FDFEFE",
col = "#FDFEFE"
) + ylim(c(-0.2,0.6)) + xlim(c(120,470)) + coord_polar() + theme_bw()
euc <- plot_resilience(dat.stab, method = "euclidean") + geom_path(alpha = 0.9, arrow = arrow(angle = 15, length = unit(0.1, "inches"),
ends = "last", type = "closed"), color="steelblue")
canb <- plot_resilience(dat.stab, method = "canberra") + geom_path(alpha = 0.9, arrow = arrow(angle = 15, length = unit(0.1, "inches"),
ends = "last", type = "closed"), color="brown")#+ ylim(c(0,0.6)) + coord_polar()
euc / canb
plot_resilience_online(dat.stab, col.low = "#fa9fb5", col.high = "#49006a") + geom_path(alpha = 0.9, arrow = arrow(angle = 15, length = unit(0.1, "inches"),
ends = "last", type = "closed"), color="red")+
coord_polar(theta = "x") + theme_bw()  + ylim(c(-0.2,0.4))+ xlim(c(24, 460))
#+  ADD ARROW SHOWING DIRECTION FROM ZERO TO 460h
#+ geom_curve(aes(x = 200, y = 0.0, xend = 400, yend = 0.4), curvature = 4)
data(SyncomGMM)
focal.species <- c("Bacteroides_ovatus", "Bacteroides_xylanisolvens")
p<- plot_module_abundances(SyncomGMM,
tax.variable = focal.species,
mm.variable = c("propionate production III", "lactose degradation","xylose degradation", "galactose degradation"),
color.pal = syncom_colors("BacterialSpecies"),
nrow=2,
ncol=2)
p + theme_syncom() + theme(legend.position="bottom")
p.bioA + facet_wrap(~OTU, scales="free") + theme_syncom(base_size = 8)
data(SyncomFiltData)
short_time_labels <- c("74.5h", "173h", "438h", "434h", "390h")
syncom_ps <- subset_samples(SyncomFiltData, !(Time_label %in% short_time_labels))
bioA <- subset_samples(syncom_ps, StudyIdentifier == "Bioreactor A")
bioA.lg <- add_time_lag(bioA)
bioA.lg <- subset_samples(bioA.lg, time_lag >= 4)
p.bioA <- short_term(bioA.lg, rarefy = TRUE, depth = min(sample_sums(bioA.lg)), plot.type = "polar")
data(SyncomFiltData)
short_time_labels <- c("74.5h", "173h", "438h", "434h", "390h")
syncom_ps <- subset_samples(SyncomFiltData, !(Time_label %in% short_time_labels))
bioA <- subset_samples(syncom_ps, StudyIdentifier == "Bioreactor A")
bioA.lg <- add_time_lag(bioA)
bioA.lg <- subset_samples(bioA.lg, time_lag >= 4)
p.bioA <- short_term_change(bioA.lg, rarefy = TRUE, depth = min(sample_sums(bioA.lg)), plot.type = "polar")
p.g <- p.bioA + scale_color_manual(values = syncom_colors2("BacterialSpecies")) +
ggtitle("Bioreactor A")
print(p.g)
p.bioA + facet_wrap(~OTU) + theme_syncom()
p.bioA <- plot_growth_rate(bioA.lg, rarefy = TRUE, depth=min(sample_sums(bioA.lg)))
p.bioA <- p.bioA +
theme_syncom() +
scale_color_manual("Taxa",values=syncom_colors2("BacterialSpecies")) + ggtitle("Bioreactor A") +
geom_vline(xintercept = 4, size=3, alpha=0.6, color="grey70") +
geom_hline(aes(yintercept = 0),linetype="dashed", alpha=0.6)
p.bioA + coord_polar()
p.bioA + facet_wrap(~OTU) + theme_syncom()
data(SyncomFiltData)
short_time_labels <- c("74.5h", "173h", "438h", "434h", "390h")
syncom_ps <- subset_samples(SyncomFiltData, !(Time_label %in% short_time_labels))
bioA <- subset_samples(syncom_ps, StudyIdentifier == "Bioreactor A")
bioA.lg <- add_time_lag(bioA)
bioA.lg <- subset_samples(bioA.lg, time_lag >= 4)
p.bioA <- short_term_change(bioA.lg, rarefy = TRUE, depth = min(sample_sums(bioA.lg)), plot.type = "polar")
p.g <- p.bioA + scale_color_manual(values = syncom_colors2("BacterialSpecies")) +
ggtitle("Bioreactor A")
print(p.g)
# Run once to configure package to use pkgdown
usethis::use_pkgdown()
library(syncomR)
library(syncomR)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors2("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
data(SyncomFiltData)
library(syncomR)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
library(syncomR)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
library(syncomR)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
bioa_ps <- subset_samples(SyncomFiltData.rel, StudyIdentifier=="Bioreactor A")
fasting_ps <- add_time_lag(bioa_ps)
fasting_ps <- subset_samples(fasting_ps, time_lag >= 12)
p <- plot_syncom_composition(fasting_ps,
type = "bar",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
#facet.var = "StudyIdentifier",
numeric.x.axis = F)
print(p + theme_syncom())
## Loding and installing
# https://kbroman.org/pkg_primer/pages/vignettes.html
# https://github.com/ShadeLab/microbiome_trait_succession/blob/master/succession_analysis.R
# https://github.com/fcentler/EcologicalStabilityPropertiesComputation/blob/master/StabilityComputationV1.0.R
# https://github.com/microbiome/microbiome/blob/master/DESCRIPTION
roxygen2::roxygenize() #Documentation
devtools::document() #
library(syncomR)
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
p <- plot_syncom_composition(SyncomFiltData.rel,
type = "area",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
facet.var = "StudyIdentifier")
print(p + theme_syncom())
data(SyncomFiltData)
SyncomFiltData.rel <- microbiome::transform(SyncomFiltData, "compositional")
bioa_ps <- subset_samples(SyncomFiltData.rel, StudyIdentifier=="Bioreactor A")
fasting_ps <- add_time_lag(bioa_ps)
fasting_ps <- subset_samples(fasting_ps, time_lag >= 12)
p <- plot_syncom_composition(fasting_ps,
type = "bar",
time.col = "Time_hr_num",
taxa.level = "OTU",
sp.fill.pal = syncom_colors("BacterialSpecies"),
#facet.var = "StudyIdentifier",
numeric.x.axis = F)
print(p + theme_syncom())
ps1.sycom.rel <- microbiome::transform(SyncomFiltData, "compositional")
fer_cols <- c(`Bioreactor A`= "#b2182b", `Bioreactor B`="#2166ac", `Bioreactor C` = "#35978f")
tax.trac <- plot_trajectory(ps1.sycom.rel,
time.col = "Time_hr",
taxa.level = "Species",
type = "single",
taxa = "Akkermansia_muciniphila",
group.variable = "StudyIdentifier",
color.pal = fer_cols,
transform.counts = "compositional")
tax.trac <- tax.trac + geom_smooth() + theme_syncom()
## a line to specific timepoint of interest
tax.trac + geom_vline(xintercept = 152, size=3, alpha=0.6, color="#e41a1c")
roxygen2::roxygenize() #Documentation
devtools::document() #
